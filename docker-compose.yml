services:
    api:
        build: .
        environment:
            - PORT=5000
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "5000:5000"
    swagger:
        image: swaggerapi/swagger-ui:latest
        environment:
            - SWAGGER_JSON=/openapi.yaml
        volumes:
            - ./openapi/openapi.yaml:/openapi.yaml:ro
        ports:
            - "8080:8080"
        depends_on:
            - api
    db:
        image: postgres:16-alpine
        container_name: postgres_db
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ./db:/docker-entrypoint-initdb.d:ro # Ex√©cute schema.sql + seed.sql au 1er run
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 5s
            retries: 5
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@mail.com
            PGADMIN_DEFAULT_PASSWORD: adminpass
        ports:
            - "5050:80"
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        depends_on:
            - db
volumes:
    pgdata:
    pgadmin_data:
